stages:
  - build
  - test
  
variables:
  GIT_SUBMODULE_STRATEGY: recursive

build_local:
  stage: build
  image: gitlab-registry.cern.ch/linuxsupport/alma9-base
  script:
    # fetch and install pixi locally
    - curl -fsSL https://pixi.sh/install.sh | bash
    - . ~/.bash_profile 
    # run small pixi tests
    - pixi list
    - pixi run python --version
    - pixi run which gcc
    - pixi run which cc
    - pixi run which c++
    # build project
    - mkdir build; cd build
    - pixi run cmake ../source
    - pixi run make
    # small local test (move to later stage)
    # - source setup.sh
    # - pixi run genModels.py
  artifacts:
    expire_in: 1 week
    paths:
      - build/ 
      - /root/.pixi/bin
      - ~/.bash_profile

test_genModels:
  stage: test
  dependencies:
    - build_local
  script:
    - . ~/.bash_profile 
    - pixi list
    - ls
    - pwd
    - cd build
    - source setup.sh
    - cd ..
    - mkdir run; cd run
    - pixi run genModels.py

build_docker:
  stage: build
  image:
    name: gitlab-registry.cern.ch/ci-tools/docker-image-builder
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - |
      # If pipeline runs on the default branch (main): Set tag to "latest"
      if test "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH"; then
        add=""
        tag="latest"
      # If pipeline is a tag pipeline, set tag to the git commit tag
      elif test -n "$CI_COMMIT_TAG"; then
        add=""
        tag="$CI_COMMIT_TAG"
      # Else set the tag to the branch name and git commit sha
      else
        add="-$CI_COMMIT_REF_NAME"
        tag="$CI_COMMIT_SHORT_SHA"
      fi
    - /kaniko/executor --context "${CI_PROJECT_DIR}"
                       --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
                       --destination "${CI_REGISTRY_IMAGE}${add}:${tag}"